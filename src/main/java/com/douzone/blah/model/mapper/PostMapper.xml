<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.douzone.blah.dao.PostDAO">

	<!-- 카테고리별 게시글 목록 -->
	<select id="getPostList" parameterType="hashmap"
		resultType="com.douzone.blah.model.PostDTO">
		select * from
		(select A.*, ROWNUM r from
		(select * from post where post_category = ${post_category} order by post_num
		desc) A
		) where r >= #{start} and r &lt;= #{end} and post_category =
		${post_category}



		<!-- 게시글 번호로 내림차순한거를 A로 네이밍. A에서 ROWNUM r 설정. r이 start와 end 범위에서 전체 출력 -->
	</select>

	<!-- 9개 카테고리 view 목록 -->
	<select id="getPostList1" parameterType="String"
		resultType="com.douzone.blah.model.PostDTO">
		select * from
		(select A.*, ROWNUM r from
		(select * from post where post_category = '${value}' order by post_readcount
		desc) A
		) where ROWNUM &lt;= 3 and post_category = '${value}'
	</select>

	<!-- 게시글 전체목록 -->
	<select id="getPostListAll" parameterType="hashmap"
		resultType="com.douzone.blah.model.PostDTO">
		select * from
		(select A.*, ROWNUM r from
		(select * from post order by post_num desc) A
		)
		where r >= #{start} and r &lt;= #{end}
	</select>

	<!-- 글 쓰기 -->
	<insert id="insertPost"
		parameterType="com.douzone.blah.model.PostDTO">
		insert into post(post_num, post_title, post_category,
		post_content,
		post_usernum, post_like, post_regdate, post_readcount)
		values( (select NVL(max(post_num),0)+1 from post), #{post_title},
		#{post_category},
		#{post_content}, #{post_usernum}, 0, sysdate, 0)
	</insert>

	<!-- 글 읽기 -->
	<select id="getPost" parameterType="Integer"
		resultType="com.douzone.blah.model.PostDTO">
		select * from post where post_num = #{post_num}
	</select>

	<!-- 글 삭제 -->
	<delete id="deletePost"
		parameterType="com.douzone.blah.model.PostDTO">
		delete from post where post_num = #{post_num}
	</delete>

	<!-- 글 수정 -->
	<update id="updatePost"
		parameterType="com.douzone.blah.model.PostDTO">
		update post set post_title=#{post_title},
		post_category=#{post_category},
		post_content=#{post_content},
		post_usernum=#{post_usernum}, post_regdate=sysdate
		where post_num =
		#{post_num}
	</update>

	<!-- 조회수 증가 -->
	<update id="updateHit" parameterType="Integer">
		update post set
		post_readcount = post_readcount+1
		where post_num = #{post_num}
	</update>

	<!-- 글의 수 -->
	<select id="getPostCount" resultType="Integer">
		select count(*) from post
	</select>

	<!-- 댓글 개수 -->
	<update id="updateReviewCount" parameterType="Integer">
		update post
		set post_reviewcount = post_reviewcount + #{amount} where
		post_num=#{post_num}
		<!-- set p.post_reviewcount = (select count(postreview_num) from postreview 
			where postreview_postnum=#{postreview_postnum}) where p.post_num=#{post_num} -->
	</update>

	<!-- 게시글 검색 -->
	<select id="getSearchList" parameterType="hashMap"
		resultType="com.douzone.blah.model.PostDTO">
		select * from post
		<if test="column != null">
			where ${column} like '%' || #{keyvalue} || '%' order by post_num desc
		</if>
	</select>

	<!-- 게시글 검색 -->
	<select id="getSearchList2" parameterType="hashMap"
		resultType="map">

		<if test="column != null">
			<choose>
				<when test=" column == 'post_usernum' ">
					select * from post,(select user_id from user2 where user_id =
					#{keyvalue}) where post_usernum = (select user_num from user2 where
					user_id = #{keyvalue}) order by post_num desc
				</when>
				<otherwise>
					select * from post , user2 where ${column} like '%' || #{keyvalue} || '%'
					and post.post_usernum = user2.user_num order by post_num desc
				</otherwise>
			</choose>
		</if>


	</select>

	<!-- 카테고리 페이징 위한 게시글 카운트 -->
	<select id="getPostCountCategory" parameterType="String"
		resultType="Integer">
		select count(*) from post where post_category = ${value}
	</select>

	<!-- 마이페이지 내가 쓴 글 목록 조회 -->
	<select id="getMyPost" parameterType="hashmap"
		resultType="hashmap">
		select * from
		(select A.*, ROWNUM r from
		(select * from post order by post_num desc) A
		)
		where r >= #{start} and r &lt;= #{end} and (post_usernum in (select
		user_num from user2 where user_id = #{user_id}))
		
		<![CDATA[
		select r.recruit_corpnum, c.corp_name, recruit_num, recruit_adminnum, recruit_startdate, recruit_enddate, recruit_jobgroup, recruit_career, recruit_readcount 
			from recruit r, corp c
			where r.recruit_corpnum in(select cc.corp_num from corp cc where cc.corp_name = '${value}')
		]]>
	</select>

	<!-- 특정 게시글에 있는 댓글 수 카운트 -->
	<select id="getPostReviewCount" parameterType="String"
		resultType="Integer">
		select count(*) from postreview where
		postreview_postnum=#{post_num}
	</select>

	<!-- 특정게시글의 유저 id 얻어오기 -->
	<select id="getUserID" parameterType="String"
		resultType="String">
		select user_id from user2 where user_num = #{post_usernum}
	</select>

</mapper>